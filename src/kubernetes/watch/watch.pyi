from collections.abc import Callable
from typing import Any, Iterable, ParamSpec

P = ParamSpec("P")

class Watch:
    def stop(self) -> None: ...
    # def get_return_type(self, func: ???) -> ???: ...
    def get_watch_argument_name(self) -> str: ...
    def stream(self, func: Callable[P, Any], *args: P.args, **kwargs: P.kwargs) -> Iterable[dict[str, Any]]: ...
